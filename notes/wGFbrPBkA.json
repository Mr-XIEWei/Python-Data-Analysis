{"_id":"note:wGFbrPBkA","title":"markdown语法示例","content":"# 数据清洗常用工具\n\n## 分支结构\n\n### 应用场景\n\n迄今为止，我们写的Python代码都是一条一条语句顺序执行，这种代码结构通常称之为顺序结构。然而仅有顺序结构并不能解决所有的问题，比如我们设计一个游戏，游戏第一关的通关条件是玩家获得1000分，那么在完成本局游戏后，我们要根据玩家得到分数来决定究竟是进入第二关，还是告诉玩家“Game Over”，这里就会产生两个分支，而且这两个分支只有一个会被执行。类似的场景还有很多，我们将这种结构称之为“分支结构”或“选择结构”。给大家一分钟的时间，你应该可以想到至少5个以上这样的例子，赶紧试一试。\n\n```Python\n\n```\n\n#### Sublime Text - 高级文本编辑器\n\n![](./res/python-sublime.png)\n\n- 安装包管理工具。\n  1. 通过快捷键Ctrl+`或者在View菜单中选择Show Console打开控制台，输入下面的代码。\n\n  - Sublime 3\n\n  ```Python\n  import  urllib.request,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),'wb').write(urllib.request.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read())\n  ```\n  - Sublime 2\n\n  ```Python\n  import  urllib2,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();os.makedirs(ipp)ifnotos.path.exists(ipp)elseNone;urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler()));open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read());print('Please restart Sublime Text to finish installation')\n  ```\n  \n> **说明**：事实上[Visual Studio Code](<https://code.visualstudio.com/>)可能是更好的选择，它不用花钱并提供了更为完整和强大的功能，有兴趣的读者可以自行研究。\n\n\n\n1.  在Python交互式环境中输入下面的代码并查看结果，请尝试将看到的内容翻译成中文。\n\n    ```Python\n    import this\n    ```\n\n  > **说明**：输入上面的代码，在Python的交互式环境中可以看到Tim Peter撰写的[“Python之禅”](../Python之禅.md)，里面讲述的道理不仅仅适用于Python，也适用于其他编程语言。\n","tags":[],"folderPathname":"/","data":{},"createdAt":"2020-09-25T11:00:59.029Z","updatedAt":"2020-09-25T14:36:20.513Z","trashed":false,"_rev":"O2j0HOKqn"}